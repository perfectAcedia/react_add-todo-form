{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUser","App","useState","setTodos","setTitle","setUserID","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","newTodo","preventDefault","Math","max","currentTodos","htmlFor","type","placeholder","value","onChange","target","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c7177ae.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import User from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todo: Todos\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': completed })\n      }\n      data-id={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../../types/Todos';\n\ntype Props = {\n  todos: Todos[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <>\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './types/Todos';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const todosWithUser: Todos[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todos[]>(todosWithUser);\n  const [title, setTitle] = useState('');\n  const [userId, setUserID] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserIdChange = (event:\n  React.ChangeEvent<HTMLSelectElement>) => {\n    setUserID(+event.target.value);\n    setUserError(false);\n  };\n\n  const addTodo = (newTodo: Todos) => {\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const handleAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title && userId) {\n      addTodo({\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      });\n      setTitle('');\n      setUserID(0);\n    }\n\n    setTitleError(!title);\n    setUserError(!userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleAdd}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"post-title\">Title: </label>\n          <input\n            id=\"post-title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"post-user-id\">User: </label>\n          <select\n            id=\"post-user-id\"\n            data-cy=\"userSelect\"\n            required\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}